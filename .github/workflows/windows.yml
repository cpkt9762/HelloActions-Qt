name: Windows
on: 
  # push代码时触发workflow
  push:
    paths:
      - '*.pro'
      - 'src/**'
      - '.github/workflows/windows.yml'
  pull_request:
    paths:
      - '*.pro'
      - 'src/**'
      - '.github/workflows/windows.yml' 
env: 
    REPO_URL:  "https://github.com/qtproject/qt5.git"
    REPO_BRANCH: "5.15.2"
    REPO_sha256: "3a530d1b243b5dec00bc54937455471aaa3e56849d2593edb8ded07228202240"
 

jobs:
  build:
    name: Build
    # 运行平台， windows-latest目前是windows server 2019 
    # 参考文档 https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md
    runs-on: windows-2019
    strategy:
      # 矩阵配置
      matrix:
        include:
          # 5.15.2 参考 https://mirrors.cloud.tencent.com/qt/online/qtsdkrepository/windows_x86/desktop/qt5_5152/
          - qt_ver: 5.15.2
            qt_arch: win32_msvc2019
            msvc_arch: x86
            qt_arch_install: msvc2019
          - qt_ver: 5.15.2          
            qt_arch: win64_msvc2019_64
            msvc_arch: x64
            qt_arch_install: msvc2019_64          
       
    env:
      targetName: HelloActions-Qt.exe

    # 步骤
    steps: 
      - name: Clone source code
        id: dowload
        shell: powershell 
        run: |
          wget -Uri "https://download.qt.io/archive/qt/5.15/5.15.2/single/qt-everywhere-src-5.15.2.tar.xz" -OutFile "qt-everywhere-src-5.15.2.tar.xz"
          tar -xvJf "qt-everywhere-src-5.15.2.tar.xz" 
          ls 


      # msvc编译
      - name: msvc-build
        id: build
        env:
          archiveName: ${{ matrix.qt_ver }}-${{ matrix.qt_target }}-${{ matrix.qt_arch }}
        shell: cmd
        run: |
          cd qt5
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.msvc_arch }}
          configure -confirm-license -opensource -platform win32-msvc -debug-and-release -static -static-runtime -force-debug-info -opengl dynamic -prefix ${env:archiveName} -qt-sqlite -qt-pcre -qt-zlib -qt-libpng -qt-libjpeg -opengl desktop -qt-freetype -nomake tests -no-compile-examples -nomake examples -mp
          qmake
          nmake
          echo winSdkDir=%WindowsSdkDir% >> %GITHUB_ENV%
          echo winSdkVer=%WindowsSdkVersion% >> %GITHUB_ENV%
          echo vcToolsInstallDir=%VCToolsInstallDir% >> %GITHUB_ENV%
          echo vcToolsRedistDir=%VCToolsRedistDir% >> %GITHUB_ENV%
      # 打包 
      - name: package
        id: package      
        env:
          archiveName: ${{ matrix.qt_ver }}-${{ matrix.qt_target }}-${{ matrix.qt_arch }}
          msvcArch: ${{ matrix.msvc_arch }}          
        shell: pwsh
        run: |
          & scripts\windows-publish.ps1 ${env:archiveName} ${env:targetName}
          # 记录packageName给后续step
           $name = ${env:archiveName}
           echo "::set-output name=packageName::$name"       
      # tag 查询github-Release
      # 上传artifacts          
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.packageName }}
          path: ${{ steps.package.outputs.packageName }}.zip
      # tag 上传Release
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.package.outputs.packageName }}.zip
          asset_name: ${{ steps.package.outputs.packageName }}.zip
          tag: ${{ github.ref }}
          overwrite: true 
